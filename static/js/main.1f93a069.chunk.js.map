{"version":3,"sources":["components/Player.js","components/Song.js","util.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","setIsPlaying","isPlaying","songs","setSongs","setCurrentSong","useState","volume","setVolume","mute","setMute","prevVolume","setPrevVolume","repeat","setRepeat","shuffle","setShuffle","shuffleList","setShuffleList","audioRef","useRef","activeLibraryHandler","prevnext","map","targetSong","active","id","getTime","time","Math","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","song","newIndex","length","autoPlayHandler","e","current","play","timeUpdateHandler","target","currentTime","duration","roundedCurrent","round","roundedDuration","animation","setSongInfo","songInfo","animationPercentage","trackANimation","transform","trackAnim","track","className","style","background","color","min","onChange","value","max","type","volumeLevel","size","onClick","currentVolume","icon","faVolumeMute","faVolumeOff","faAngleLeft","pause","faPause","faPlay","faAngleRight","random","faRandom","faBackward","onLoadedMetadata","onLoadedData","onEnded","nextSong","onTimeUpdate","ref","src","audio","Song","cover","alt","name","artist","chillHop","uuidv4","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","faWindowClose","faMusic","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f93a069.chunk.js","sourcesContent":["import React, {  useRef, useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay,faAngleLeft,faAngleRight,faPause,faVolumeMute, faVolumeOff,faRandom,faBackward} from '@fortawesome/free-solid-svg-icons'\n\nfunction Player({currentSong,setIsPlaying,isPlaying,songs,setSongs,setCurrentSong}) {\n \n    const [volume,setVolume]=useState(60)\n    const [mute,setMute]=useState(false)\n    const [prevVolume,setPrevVolume]=useState(volume)\n    const [repeat,setRepeat]=useState(false)\n    const [shuffle,setShuffle]=useState(false)\n    const [shuffleList,setShuffleList]=useState([])\n\n    const audioRef=useRef(null)\n\n    const handleShuffle=()=>{\n        setShuffle(!shuffle)\n        setRepeat(false)\n         \n        setShuffleList([...shuffleList,Math.floor(Math.random() * (songs.length))])\n        \n     \n       /*  activeLibraryHandler(songs[newIndex]) */\n      \n       \n        autoPlayHandler()\n      \n       \n    \n    }\n\n    const handleRepeat=()=>{\n        setRepeat(!repeat)  \n        setShuffle(false) \n\n        \n\n    }\n\n\n    const handleMute =(e)=>{\n        if(mute){\n            var currentVolume=prevVolume / 100;          \n            audioRef.current.volume=currentVolume;\n            setVolume(prevVolume);\n            setMute(false);\n\n        }\n        else{\n            setPrevVolume(volume)\n            audioRef.current.volume = 0\n            setMute(true)          \n            setVolume(0)\n            \n\n        }\n    }\n\n    const handleVolumeChange=(e)=>{\n        const volumeLevel = e.target.value /100 ;\n        audioRef.current.volume=volumeLevel\n        setVolume(e.target.value)\n    }\n\n\n    const activeLibraryHandler=(prevnext)=>{\n\n      setSongs(\n            songs.map((targetSong) => {\n                return {\n                  ...targetSong,\n                  active: targetSong.id === prevnext.id\n                }\n              }\n            )\n          )\n    }\n    const playSongHandler=()=>{\n        //something built to audio\n\n        if(isPlaying){\n            setIsPlaying(false)\n            \n            audioRef.current.pause()\n            \n        }\n        else{\n            audioRef.current.play()\n            setIsPlaying(true)\n           \n\n        }\n      \n\n    }\n    const getTime=(time)=>{\n        return (\n        Math.floor(time/60) + \":\" + (\"0\"+ Math.floor(time % 60 )).slice(-2) )\n    }\n\n    const skipTrackHandler=(direction)=>{\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        let newIndex = 0;\n        switch (direction) {\n          case \"skip-forward\":\n            //if you reach max, go back to zero\n            newIndex = (currentIndex + 1) % songs.length;\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\n            break;\n    \n          case \"skip-back\":\n            //if you reach zero, go back to max\n            newIndex = (songs.length - 1 + currentIndex) % songs.length;\n            activeLibraryHandler(songs[(songs.length - 1 + currentIndex) % songs.length])\n         \n            break;\n\n          default:\n              newIndex+=1  \n        }\n    \n        setCurrentSong(songs[newIndex]); \n\n\n    }\nconst dragHandler=(e)=>{\n    audioRef.current.currentTime=e.target.value\n    setSongInfo({...songInfo,currentTime:e.target.value})\n\n}\nconst autoPlayHandler=(e)=>{\n \n  \n   if (isPlaying) {\n    audioRef.current.play();\n  }\n   \n}\n\nconst songEndHandler=()=>{\n    if(repeat){\n     \n     audioRef.current.currentTime = 0\n     if(isPlaying){\n       audioRef.current.play()\n     }\n     \n\n    }\n    else if(shuffle){\n        \n      \n      setShuffleList([...shuffleList,Math.floor(Math.random() * (songs.length))])\n    \n\n      if(shuffleList[shuffleList.length-1] === shuffleList[shuffleList.length-2]||shuffleList[shuffleList.length-1] === shuffleList[shuffleList.length-3] ){\n        setCurrentSong(songs[Math.floor(Math.random() * (songs.length))])\n    }\n    else{\n      setCurrentSong(songs[shuffleList[shuffleList.length-1]])\n    }\n      \n   \n    \n       /*  activeLibraryHandler(songs[newIndex]) */\n      \n       \n        autoPlayHandler()\n      \n       \n      \n        \n    }\n    else{\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    let nextSong = (currentIndex + 1) % songs.length;\n    setCurrentSong(songs[nextSong]); \n    activeLibraryHandler(songs[nextSong])\n    }\n\n\n}\n\n    const timeUpdateHandler=(e)=>{\n        const current=e.target.currentTime\n        const duration=e.target.duration\n\n        const roundedCurrent=Math.round(current)\n\n        const roundedDuration=Math.round(duration)\n\n        const animation=Math.round((roundedCurrent/roundedDuration)*100)\n \n      /*   if (e.target.pause && isPlaying) {\n            audioRef.current.play();\n       } */\n        setSongInfo({\n            ...songInfo,currentTime:current,duration:duration,animationPercentage:animation\n        })\n    }\n\n    const [songInfo,setSongInfo]=useState({\n        currentTime:0,\n        duration:0,\n        animationPercentage:0\n    })\n\n    const trackANimation={\n        transform:`translateX(${songInfo.animationPercentage}%)`\n    }\n    const trackAnim = {\n        track: {\n            transform: `translateX(${songInfo.animationPercentage}%)`,\n        },\n        volume: {\n            transform: `translateX(${volume}%)`,\n        },\n    }\n    return (\n        <div className=\"player\">\n         \n            <div className=\"time-control\">\n\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div className=\"track\" style={{background:`linear-gradient(to right,${currentSong.color[0]},\n                    ${currentSong.color[1]})`}}>\n\n                <input min={0} onChange={dragHandler} max={songInfo.duration||0} value={songInfo.currentTime} type=\"range\" />\n            \n                <div style={trackANimation} className=\"animate-track\" ></div>\n                </div>\n                \n                <p>{songInfo?getTime(songInfo.duration||0):\"0.00\"}</p>\n            </div>\n            <div className=\"volume\">\n            <div className=\"volume-control\">\n     \n                <div className=\"volume-track\">\n                \n                    <input type=\"range\" min={0} value={volume} onChange={handleVolumeChange} max={100}/>\n\n                    <div className=\"volume-animate\" style={trackAnim.volume}></div>\n\n                </div>\n                \n            \n\n            </div>\n           <div className=\"muteIcon\">\n            <FontAwesomeIcon size=\"1x\" onClick={handleMute}  icon={mute ? faVolumeMute:faVolumeOff}/>\n            </div>\n        \n            </div>\n            <div className=\"play-control\">\n               <FontAwesomeIcon onClick={()=>skipTrackHandler('skip-back')} className=\"skip-back\"  size=\"2x\" icon={faAngleLeft} />\n               <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying?faPause:faPlay} />\n                <FontAwesomeIcon  onClick={()=>skipTrackHandler('skip-forward')}className=\"sjip-forward\" size=\"2x\" icon={faAngleRight} />\n\n            </div>\n            <div className=\"repeat-control\">\n                <FontAwesomeIcon size=\"2x\" style={shuffle?{color:'red'}:{color:''}}  className=\"repeat\" onClick={handleShuffle} icon={faRandom} />\n                <FontAwesomeIcon size=\"2x\" style={repeat?{color:'red'}:{color:''}}  className=\"repeat\" onClick={handleRepeat} icon={faBackward} />\n            </div>\n            <audio onLoadedMetadata={timeUpdateHandler} onLoadedData={autoPlayHandler} onEnded={songEndHandler}  onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio}/>\n            \n        </div>\n    )\n}\n\n\n\nexport default Player\n","import React from 'react'\n\nfunction Song({currentSong,isPlaying}) {\n    return (\n        <div className=\"song-container\">\n            <img src={currentSong.cover} className={`${isPlaying? 'song-playing':''}`} alt={currentSong.name} />\n          \n    <h2>{currentSong.name}</h2>\n    <h3>{currentSong.artist}</h3>\n            \n        </div>\n    )\n}\n\nexport default Song\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n        name:\"Creswick\",\n        cover:\"https://chillhop.com/wp-content/uploads/2020/10/23fdd99adc3e16abcb67b004ea3e748ebf433a49-1024x1024.jpg\",\n        artist:\"Aviino\",\n        audio:\"https://mp3.chillhop.com/serve.php/?mp3=10454\",\n        color:[\"#B66DB5\",\"#E86F91\"],\n        id:uuidv4(),\n        active:false,\n\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;","import React from 'react'\n\nfunction LibrarySong({song,setCurrentSong,id,songs,setSongs}) {\n\n    const songSelectHandler=()=>{\n       \n       setCurrentSong(song)\n       setSongs(\n        songs.map((targetSong) => {\n            return {\n              ...targetSong,\n              active: targetSong.id === song.id\n            }\n          }\n        )\n      )\n     \n       \n\n    }\n    return (\n        <div className={`library-song ${song.active?'selected':''}`} onClick={songSelectHandler}>\n                  <img src={song.cover} alt={song.name} />\n                  <div className=\"song-description\">\n                  <h3>{song.name}</h3>\n          <h4>{song.artist}</h4>\n                  </div>\n          \n       \n        </div>\n    )\n}\n\nexport default LibrarySong\n\n\n\n","import React from 'react'\nimport LibrarySong from './LibrarySong'\n\nfunction Library({songs,setCurrentSong,setIsPlaying,setSongs,libraryStatus}) {\n    return (\n        <div className={`library ${libraryStatus?'active-library':''}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map(song=>(\n                     <LibrarySong song={song} setSongs={setSongs} id={song.id}  key={song.id} songs={songs} setCurrentSong={setCurrentSong}/>\n\n\n                ))}\n               \n            </div>\n            \n        </div>\n    )\n}\n\nexport default Library\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic ,faWindowClose} from '@fortawesome/free-solid-svg-icons'\n\n\n\nfunction Nav({setLibraryStatus,libraryStatus}) {\n    return (\n        <nav>\n            \n            <h1>Waves</h1>\n            <button onClick={()=>setLibraryStatus(!libraryStatus)}>\n                {libraryStatus?'Close ':'Library '} \n\n                <FontAwesomeIcon  icon={libraryStatus?faWindowClose:faMusic} />\n            </button>\n          \n  \n           \n \n        </nav>\n    )\n}\n\nexport default Nav\n","\nimport \"./styles/app.scss\"\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport data from './util'\nimport { useState } from \"react\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const [songs,setSongs]=useState(data())\n  const [currentSong,setCurrentSong]=useState(songs[0])\n  const [isPlaying,setIsPlaying]=useState(false)\n\n  const [libraryStatus,setLibraryStatus]=useState(false)\n  return (\n    <div className={`app ${libraryStatus ? 'library-active':''}`}>\n      <Nav  libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player currentSong={currentSong}\n      songs={songs}\n      setCurrentSong={setCurrentSong}\n      setIsPlaying={setIsPlaying}\n      isPlaying={isPlaying}\n      setSongs={setSongs}\n      \n      \n      />\n      <Library songs={songs} libraryStatus={libraryStatus} setSongs={setSongs} setCurrentSong={setCurrentSong}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}